workspace(name = "lillymol")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# These external dependencies will have been built by build_third_party.sh

# Not actually being used.
new_local_repository(
    name = "fast_float",
    path = "../third_party/include/",
    build_file_content =
"""
cc_library(
    name = "fast_float",
    hdrs = [
        "fast_float.h",
    ],
    visibility = ['//visibility:public'],
)
"""
)

# If MPI is installed in your environment...
new_local_repository(
    name = "mpich",
    path = "/lrlhps/apps/mpich/mpich-3.1.4/",
    build_file_content =
"""
cc_library (
    name = "mpich",
    hdrs = glob(["include/**"]),
    strip_include_prefix = "include",
    srcs = glob(["lib/*.a"]),
    visibility = ["//visibility:public"],
)
"""
)

#  new_local_repository(
#     name = "pybind11_protobuf",
#     path = "../third_party/pybind11_protobuf",
#     workspace_file = "WORKSPACE",
#     build_file = "pybind11_protobuf/BUILD",
#  )

# in order to build LillyMol pybind11 bindings you will need a python
# installation with pybind installed with that. Adjust this to meet
# local needs.
new_local_repository(
    name = "python",
    path = "/opt/conda/envs/lillymol/include/python3.10",
    build_file_content = """
cc_library(
    name = "python",
    hdrs = glob(
            ["**/*.h"]
    ),
    includes = [
        ".",
    ],
    visibility = ["//visibility:public"],
)
"""
)

new_local_repository(
    name = "x86-simd-sort",
    path = "../third_party/x86-simd-sort",
    build_file_content = """
cc_library(
    name = "x86-simd.sort",
    hdrs =
      glob(
        ["src/*hpp"],
      ),
    strip_include_prefix = "src",
    visibility = ["//visibility:public"],
)
""",
)


###

# THESE TARGETS REQUIRE THIRD PARTY LICENSED PRODUCTS.
# If you have these products available, adjust the file
# paths to reflect the locations.

# Note that this includes a libf2c that might be different from @local_f2c.
# definitely possibility of problems...
new_local_repository(
    name = "biobyte",
    path= "/lrlhps/apps/gc3tk/c3tk-core/lib/biobyte/linux-64/",
    build_file_content = """
cc_library (
    name = "biobyte",
    srcs = [ "lib/libBB.a", "lib/libf2c.a" ],
    hdrs = glob(["h/*.h"]),
    strip_include_prefix = "h",
    visibility = ["//visibility:public"],
)
"""
)

new_local_repository(
    name = "corina",
    path = "/lrlhps/apps/gc3tk/c3tk-core/lib/corina",
#   path = "/lrlhps/apps/corina/corina-5.0.0",
    build_file_content = """
cc_library(
    name = "corina",
    srcs = [
#      "lib/corina.so",
       "lib/libcorina_linux_rhel6_x86_64_libc2.12_gcc4.4.7.so",
    ],
    hdrs = ["include/corina_lib.h"],
    strip_include_prefix = "include",
    visibility = ["//visibility:public"],
)
""",
)
